{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"enabled\"],\n  _excluded2 = [\"enabled\", \"active\"];\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nexport const MaybeScreenContainer = _ref => {\n  let {\n      enabled\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (Screens != null) {\n    return _jsx(Screens.ScreenContainer, Object.assign({\n      enabled: enabled\n    }, rest));\n  }\n  return _jsx(View, Object.assign({}, rest));\n};\nexport const MaybeScreen = _ref2 => {\n  let {\n      enabled,\n      active\n    } = _ref2,\n    rest = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n  if (Screens != null) {\n    return _jsx(Screens.Screen, Object.assign({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n  return _jsx(View, Object.assign({}, rest));\n};","map":{"version":3,"names":["React","View","jsx","_jsx","Screens","require","e","MaybeScreenContainer","_ref","enabled","rest","_objectWithoutPropertiesLoose","_excluded","ScreenContainer","Object","assign","MaybeScreen","_ref2","active","_excluded2","Screen","activityState"],"sources":["C:\\Users\\poske\\OneDrive\\Desktop\\LocalHive\\node_modules\\@react-navigation\\stack\\src\\views\\Screens.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, type ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens != null) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation<0 | 1>;\n  children: React.ReactNode;\n  freezeOnBlur?: boolean;\n  homeIndicatorHidden?: boolean;\n}) => {\n  if (Screens != null) {\n    return (\n      <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n};\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AACgC,SAAAC,GAAA,IAAAC,IAAA;AAE9D,IAAIC,OAA0D;AAE9D,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3C,CAAC,CAAC,OAAOC,CAAC,EAAE,CACV;AAGF,OAAO,MAAMC,oBAAoB,GAAGC,IAAA,IAM9B;EAAA,IAN+B;MACnCC;IAKF,CAAC,GAAAD,IAAA;IAJIE,IAAA,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;EAKH,IAAIR,OAAO,IAAI,IAAI,EAAE;IACnB,OAAOD,IAAA,CAACC,OAAO,CAACS,eAAe,EAAAC,MAAA,CAAAC,MAAA;MAACN,OAAO,EAAEA;IAAQ,GAAKC,IAAA,CAAO,CAAC;EAChE;EAEA,OAAOP,IAAA,CAACF,IAAI,EAAAa,MAAA,CAAAC,MAAA,KAAKL,IAAA,CAAO,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMM,WAAW,GAAGC,KAAA,IAUrB;EAAA,IAVsB;MAC1BR,OAAO;MACPS;IAQF,CAAC,GAAAD,KAAA;IAPIP,IAAA,GAAAC,6BAAA,CAAAM,KAAA,EAAAE,UAAA;EAQH,IAAIf,OAAO,IAAI,IAAI,EAAE;IACnB,OACED,IAAA,CAACC,OAAO,CAACgB,MAAM,EAAAN,MAAA,CAAAC,MAAA;MAACN,OAAO,EAAEA,OAAQ;MAACY,aAAa,EAAEH;IAAO,GAAKR,IAAA,CAAO,CAAC;EAEzE;EAEA,OAAOP,IAAA,CAACF,IAAI,EAAAa,MAAA,CAAAC,MAAA,KAAKL,IAAA,CAAO,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\poske\\\\OneDrive\\\\Desktop\\\\LocalHive\\\\src\\\\screens\\\\NewsScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport CONFIG from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewsScreen() {\n  const [posts, setPosts] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [commentText, setCommentText] = useState('');\n  const [sortOrder, setSortOrder] = useState('latest');\n  const {\n    BASE_URL\n  } = CONFIG;\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/posts`);\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      setPosts(data.map(post => Object.assign({}, post, {\n        comments: post.comments || [],\n        image: post.image || 'https://via.placeholder.com/150'\n      })));\n    } catch (error) {\n      console.error('Error fetching posts:', error.message || error);\n      Alert.alert('Error', 'Unable to fetch posts. Please try again.');\n    }\n  };\n  const sortPosts = (posts, order) => {\n    return posts.sort((a, b) => order === 'latest' ? new Date(b.createdAt) - new Date(a.createdAt) : new Date(a.createdAt) - new Date(b.createdAt));\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    await fetchPosts();\n    setRefreshing(false);\n  };\n  const toggleSortOrder = () => {\n    setSortOrder(prevOrder => prevOrder === 'latest' ? 'oldest' : 'latest');\n  };\n  const handleLike = async postId => {\n    try {\n      const response = await fetch(`${BASE_URL}/posts/${postId}/like`, {\n        method: 'POST'\n      });\n      if (!response.ok) throw new Error('Failed to like post');\n      const updatedPost = await response.json();\n      setPosts(prevPosts => prevPosts.map(post => post.id === updatedPost.id ? updatedPost : post));\n    } catch (error) {\n      console.error('Error liking post:', error.message || error);\n      Alert.alert('Error', 'Unable to like post. Please try again.');\n    }\n  };\n  const handleAddComment = async (postId, comment) => {\n    if (!comment.trim()) {\n      Alert.alert('Validation Error', 'Comment cannot be empty.');\n      return;\n    }\n    try {\n      const response = await fetch(`${BASE_URL}/posts/${postId}/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          comment\n        })\n      });\n      if (!response.ok) throw new Error('Failed to add comment');\n      const updatedPost = await response.json();\n      setPosts(prevPosts => prevPosts.map(post => post.id === updatedPost.id ? updatedPost : post));\n      setCommentText('');\n    } catch (error) {\n      console.error('Error adding comment:', error.message || error);\n      Alert.alert('Error', 'Unable to add comment. Please try again.');\n    }\n  };\n  const closePostModal = () => {\n    setSelectedPost(null);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.sortContainer,\n      children: _jsxDEV(TouchableOpacity, {\n        onPress: toggleSortOrder,\n        style: styles.sortButton,\n        children: [_jsxDEV(Icon, {\n          name: \"sort\",\n          size: 20,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.sortButtonText,\n          children: sortOrder === 'latest' ? 'Sort: Latest' : 'Sort: Oldest'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: sortPosts(posts, sortOrder),\n      keyExtractor: item => item?.id?.toString(),\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: styles.postCard,\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: () => setSelectedPost(item),\n          children: [_jsxDEV(Image, {\n            source: {\n              uri: item?.image || 'https://via.placeholder.com/150'\n            },\n            style: styles.postImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.postTitle,\n            children: item?.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.postText,\n            children: item?.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.interactionRow,\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: () => handleLike(item?.id),\n            style: styles.likeButton,\n            children: [_jsxDEV(Icon, {\n              name: \"thumb-up\",\n              size: 20,\n              color: \"#fff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: [\"Like (\", item?.likes || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.commentsContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.commentsHeader,\n            children: \"Top Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), item.comments.slice(0, 2).map((comment, index) => _jsxDEV(View, {\n            style: styles.commentCard,\n            children: _jsxDEV(Text, {\n              style: styles.commentText,\n              children: comment.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this),\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: handleRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), selectedPost && _jsxDEV(Modal, {\n      animationType: \"slide\",\n      transparent: false,\n      visible: !!selectedPost,\n      children: _jsxDEV(ScrollView, {\n        style: styles.articleContainer,\n        children: [_jsxDEV(Image, {\n          source: {\n            uri: selectedPost?.image || 'https://via.placeholder.com/150'\n          },\n          style: styles.articleImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.articleTitle,\n          children: selectedPost?.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.articleText,\n          children: selectedPost?.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: styles.articleActions,\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: () => handleLike(selectedPost?.id),\n            style: styles.likeButton,\n            children: [_jsxDEV(Icon, {\n              name: \"thumb-up\",\n              size: 20,\n              color: \"#fff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: [\"Like (\", selectedPost?.likes || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), _jsxDEV(Text, {\n          style: styles.commentsHeader,\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), (selectedPost?.comments || []).map((comment, index) => _jsxDEV(Text, {\n          style: styles.commentText,\n          children: comment.comment\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)), _jsxDEV(TextInput, {\n          style: styles.commentInput,\n          placeholder: \"Add a comment...\",\n          value: commentText,\n          onChangeText: setCommentText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          onPress: () => handleAddComment(selectedPost.id, commentText),\n          style: styles.addCommentButton,\n          children: _jsxDEV(Text, {\n            style: styles.addCommentButtonText,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          onPress: closePostModal,\n          style: styles.closeButton,\n          children: _jsxDEV(Text, {\n            style: styles.closeButtonText,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#F5F5F5'\n  },\n  sortContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginBottom: 10\n  },\n  sortButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FF6347',\n    paddingVertical: 8,\n    paddingHorizontal: 15,\n    borderRadius: 5\n  },\n  sortButtonText: {\n    color: '#fff',\n    marginLeft: 5,\n    fontWeight: 'bold'\n  },\n  postCard: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 15,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    marginBottom: 15\n  },\n  postImage: {\n    width: '100%',\n    height: 150,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  postTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  postText: {\n    fontSize: 14,\n    color: '#333',\n    marginBottom: 10\n  },\n  interactionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10\n  },\n  likeButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FF6347',\n    paddingVertical: 8,\n    paddingHorizontal: 15,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: '#fff',\n    marginLeft: 5,\n    fontWeight: 'bold'\n  },\n  articleContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20\n  },\n  articleImage: {\n    width: '100%',\n    height: 300,\n    borderRadius: 10,\n    marginBottom: 15\n  },\n  articleTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  articleText: {\n    fontSize: 16,\n    color: '#333',\n    lineHeight: 24,\n    marginBottom: 20\n  },\n  closeButton: {\n    backgroundColor: '#FF6347',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    alignSelf: 'center',\n    marginTop: 20\n  },\n  closeButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  commentInput: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 10,\n    backgroundColor: '#fff'\n  },\n  addCommentButton: {\n    marginTop: 10,\n    alignItems: 'center',\n    backgroundColor: '#32CD32',\n    padding: 10,\n    borderRadius: 5\n  },\n  addCommentButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  commentsHeader: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10\n  },\n  commentText: {\n    fontSize: 14,\n    color: '#555',\n    marginTop: 5\n  },\n  commentsContainer: {\n    marginTop: 10,\n    backgroundColor: '#F9F9F9',\n    borderRadius: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#E0E0E0'\n  },\n  commentsHeader: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 5\n  },\n  commentText: {\n    fontSize: 13,\n    color: '#555',\n    lineHeight: 18\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TextInput","TouchableOpacity","FlatList","Modal","ScrollView","RefreshControl","Image","Alert","Icon","CONFIG","jsxDEV","_jsxDEV","NewsScreen","posts","setPosts","refreshing","setRefreshing","selectedPost","setSelectedPost","commentText","setCommentText","sortOrder","setSortOrder","BASE_URL","fetchPosts","response","fetch","ok","Error","status","data","json","map","post","Object","assign","comments","image","error","console","message","alert","sortPosts","order","sort","a","b","Date","createdAt","handleRefresh","toggleSortOrder","prevOrder","handleLike","postId","method","updatedPost","prevPosts","id","handleAddComment","comment","trim","headers","body","JSON","stringify","closePostModal","style","styles","container","children","sortContainer","onPress","sortButton","name","size","color","fileName","_jsxFileName","lineNumber","columnNumber","sortButtonText","keyExtractor","item","toString","renderItem","postCard","source","uri","postImage","postTitle","title","postText","description","interactionRow","likeButton","buttonText","likes","commentsContainer","commentsHeader","slice","index","commentCard","refreshControl","onRefresh","animationType","transparent","visible","articleContainer","articleImage","articleTitle","articleText","articleActions","commentInput","placeholder","value","onChangeText","addCommentButton","addCommentButtonText","closeButton","closeButtonText","create","flex","padding","backgroundColor","flexDirection","justifyContent","marginBottom","alignItems","paddingVertical","paddingHorizontal","borderRadius","marginLeft","fontWeight","borderWidth","borderColor","width","height","fontSize","lineHeight","alignSelf","marginTop"],"sources":["C:/Users/poske/OneDrive/Desktop/LocalHive/src/screens/NewsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Modal,\r\n  ScrollView,\r\n  RefreshControl,\r\n  Image,\r\n  Alert,\r\n} from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport CONFIG from './config';\r\n\r\nexport default function NewsScreen() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n  const [commentText, setCommentText] = useState('');\r\n  const [sortOrder, setSortOrder] = useState('latest');\r\n  const { BASE_URL } = CONFIG;\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/posts`);\r\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n      const data = await response.json();\r\n      setPosts(data.map((post) => ({\r\n        ...post,\r\n        comments: post.comments || [],\r\n        image: post.image || 'https://via.placeholder.com/150',\r\n      })));\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error.message || error);\r\n      Alert.alert('Error', 'Unable to fetch posts. Please try again.');\r\n    }\r\n  };\r\n\r\n  const sortPosts = (posts, order) => {\r\n    return posts.sort((a, b) =>\r\n      order === 'latest'\r\n        ? new Date(b.createdAt) - new Date(a.createdAt)\r\n        : new Date(a.createdAt) - new Date(b.createdAt)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await fetchPosts();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  const toggleSortOrder = () => {\r\n    setSortOrder((prevOrder) => (prevOrder === 'latest' ? 'oldest' : 'latest'));\r\n  };\r\n\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/posts/${postId}/like`, {\r\n        method: 'POST',\r\n      });\r\n      if (!response.ok) throw new Error('Failed to like post');\r\n      const updatedPost = await response.json();\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) => (post.id === updatedPost.id ? updatedPost : post))\r\n      );\r\n    } catch (error) {\r\n      console.error('Error liking post:', error.message || error);\r\n      Alert.alert('Error', 'Unable to like post. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (postId, comment) => {\r\n    if (!comment.trim()) {\r\n      Alert.alert('Validation Error', 'Comment cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/posts/${postId}/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ comment }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to add comment');\r\n      const updatedPost = await response.json();\r\n      setPosts((prevPosts) =>\r\n        prevPosts.map((post) => (post.id === updatedPost.id ? updatedPost : post))\r\n      );\r\n      setCommentText('');\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error.message || error);\r\n      Alert.alert('Error', 'Unable to add comment. Please try again.');\r\n    }\r\n  };\r\n\r\n  const closePostModal = () => {\r\n    setSelectedPost(null);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Sort Button */}\r\n      <View style={styles.sortContainer}>\r\n        <TouchableOpacity onPress={toggleSortOrder} style={styles.sortButton}>\r\n          <Icon name=\"sort\" size={20} color=\"#fff\" />\r\n          <Text style={styles.sortButtonText}>\r\n          {sortOrder === 'latest' ? 'Sort: Latest' : 'Sort: Oldest'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={sortPosts(posts, sortOrder)}\r\n        keyExtractor={(item) => item?.id?.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.postCard}>\r\n            <TouchableOpacity onPress={() => setSelectedPost(item)}>\r\n              <Image\r\n                source={{ uri: item?.image || 'https://via.placeholder.com/150' }}\r\n                style={styles.postImage}\r\n              />\r\n              <Text style={styles.postTitle}>{item?.title}</Text>\r\n              <Text style={styles.postText}>{item?.description}</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.interactionRow}>\r\n              <TouchableOpacity onPress={() => handleLike(item?.id)} style={styles.likeButton}>\r\n                <Icon name=\"thumb-up\" size={20} color=\"#fff\" />\r\n                <Text style={styles.buttonText}>Like ({item?.likes || 0})</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.commentsContainer}>\r\n              <Text style={styles.commentsHeader}>Top Comments:</Text>\r\n              {item.comments.slice(0, 2).map((comment, index) => (\r\n              <View key={index} style={styles.commentCard}>\r\n              <Text style={styles.commentText}>{comment.comment}</Text>\r\n            </View>\r\n            ))}\r\n          </View>\r\n          </View>\r\n        )}\r\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={handleRefresh} />}\r\n      />\r\n\r\n      {/* Modal */}\r\n      {selectedPost && (\r\n        <Modal animationType=\"slide\" transparent={false} visible={!!selectedPost}>\r\n          <ScrollView style={styles.articleContainer}>\r\n            <Image\r\n              source={{ uri: selectedPost?.image || 'https://via.placeholder.com/150' }}\r\n              style={styles.articleImage}\r\n            />\r\n            <Text style={styles.articleTitle}>{selectedPost?.title}</Text>\r\n            <Text style={styles.articleText}>{selectedPost?.description}</Text>\r\n            <View style={styles.articleActions}>\r\n              <TouchableOpacity\r\n                onPress={() => handleLike(selectedPost?.id)}\r\n                style={styles.likeButton}\r\n              >\r\n                <Icon name=\"thumb-up\" size={20} color=\"#fff\" />\r\n                <Text style={styles.buttonText}>Like ({selectedPost?.likes || 0})</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <Text style={styles.commentsHeader}>Comments:</Text>\r\n            {(selectedPost?.comments || []).map((comment, index) => (\r\n              <Text key={index} style={styles.commentText}>\r\n                {comment.comment}\r\n              </Text>\r\n            ))}\r\n            <TextInput\r\n              style={styles.commentInput}\r\n              placeholder=\"Add a comment...\"\r\n              value={commentText}\r\n              onChangeText={setCommentText}\r\n            />\r\n            <TouchableOpacity\r\n              onPress={() => handleAddComment(selectedPost.id, commentText)}\r\n              style={styles.addCommentButton}\r\n            >\r\n              <Text style={styles.addCommentButtonText}>Add Comment</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={closePostModal} style={styles.closeButton}>\r\n              <Text style={styles.closeButtonText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </ScrollView>\r\n        </Modal>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 20, backgroundColor: '#F5F5F5' },\r\n  sortContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    marginBottom: 10,\r\n  },\r\n  sortButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#FF6347',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 5,\r\n  },\r\n  sortButtonText: { color: '#fff', marginLeft: 5, fontWeight: 'bold' },\r\n  postCard: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    marginBottom: 15,\r\n  },\r\n  postImage: { width: '100%', height: 150, borderRadius: 10, marginBottom: 10 },\r\n  postTitle: { fontSize: 16, fontWeight: 'bold', marginBottom: 5 },\r\n  postText: { fontSize: 14, color: '#333', marginBottom: 10 },\r\n  interactionRow: { flexDirection: 'row', justifyContent: 'space-between', marginBottom: 10 },\r\n  likeButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#FF6347',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 5,\r\n  },\r\n  buttonText: { color: '#fff', marginLeft: 5, fontWeight: 'bold' },\r\n  articleContainer: { flex: 1, backgroundColor: '#fff', padding: 20 },\r\n  articleImage: { width: '100%', height: 300, borderRadius: 10, marginBottom: 15 },\r\n  articleTitle: { fontSize: 24, fontWeight: 'bold', marginBottom: 15 },\r\n  articleText: { fontSize: 16, color: '#333', lineHeight: 24, marginBottom: 20 },\r\n  closeButton: {\r\n    backgroundColor: '#FF6347',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    alignSelf: 'center',\r\n    marginTop: 20,\r\n  },\r\n  closeButtonText: { color: '#fff', fontWeight: 'bold' },\r\n  commentInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 10,\r\n    backgroundColor: '#fff',\r\n  },\r\n  addCommentButton: {\r\n    marginTop: 10,\r\n    alignItems: 'center',\r\n    backgroundColor: '#32CD32',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n  },\r\n  addCommentButtonText: { color: '#fff', fontWeight: 'bold' },\r\n  commentsHeader: { fontSize: 16, fontWeight: 'bold', marginTop: 10 },\r\n  commentText: { fontSize: 14, color: '#555', marginTop: 5 },\r\n\r\n  commentsContainer: {\r\n    marginTop: 10,\r\n    backgroundColor: '#F9F9F9',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#E0E0E0',\r\n  },\r\n  commentsHeader: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: 5,\r\n  },\r\n\r\n  commentText: {\r\n    fontSize: 13,\r\n    color: '#555',\r\n    lineHeight: 18,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
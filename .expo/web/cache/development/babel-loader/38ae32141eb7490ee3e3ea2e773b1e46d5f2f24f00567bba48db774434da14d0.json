{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\poske\\\\OneDrive\\\\Desktop\\\\LocalHive\\\\src\\\\screens\\\\EventsScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CONFIG from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsScreen() {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchEvents = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${CONFIG.BASE_URL}${CONFIG.ENDPOINTS.Events}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setEvents(data);\n    } catch (error) {\n      console.error('Error fetching events:', error.message || error);\n      Alert.alert('Error', 'Unable to fetch events. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: loading ? _jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"#32CD32\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : _jsxDEV(FlatList, {\n      data: events,\n      keyExtractor: item => item.id.toString(),\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: styles.eventCard,\n        children: [_jsxDEV(Text, {\n          style: styles.eventTitle,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: styles.eventDescription,\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: styles.eventDate,\n          children: formatDate(item.date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: styles.eventLocation,\n          children: [\"Location: \", item.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this),\n      ListEmptyComponent: _jsxDEV(Text, {\n        style: styles.noEventsText,\n        children: \"No events available at the moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n    padding: 20\n  },\n  eventCard: {\n    backgroundColor: '#fff',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  eventTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  eventDescription: {\n    fontSize: 14,\n    color: '#333',\n    marginBottom: 5\n  },\n  eventDate: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#FF6347',\n    marginBottom: 5\n  },\n  eventLocation: {\n    fontSize: 14,\n    color: '#555'\n  },\n  noEventsText: {\n    fontSize: 16,\n    textAlign: 'center',\n    color: '#888',\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","StyleSheet","ActivityIndicator","Alert","CONFIG","jsxDEV","_jsxDEV","EventsScreen","events","setEvents","loading","setLoading","fetchEvents","response","fetch","BASE_URL","ENDPOINTS","Events","ok","Error","status","data","json","error","console","message","alert","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","style","styles","container","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","id","toString","renderItem","eventCard","eventTitle","title","eventDescription","description","eventDate","date","eventLocation","location","ListEmptyComponent","noEventsText","create","flex","backgroundColor","padding","borderRadius","marginBottom","borderWidth","borderColor","fontSize","fontWeight","textAlign","marginTop"],"sources":["C:/Users/poske/OneDrive/Desktop/LocalHive/src/screens/EventsScreen.js"],"sourcesContent":["// src/screens/EventsScreen.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, StyleSheet, ActivityIndicator, Alert } from 'react-native';\r\nimport CONFIG from './config';\r\n\r\nexport default function EventsScreen() {\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchEvents = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${CONFIG.BASE_URL}${CONFIG.ENDPOINTS.Events}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setEvents(data);\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error.message || error);\r\n      Alert.alert('Error', 'Unable to fetch events. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#32CD32\" />\r\n      ) : (\r\n        <FlatList\r\n          data={events}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.eventCard}>\r\n              <Text style={styles.eventTitle}>{item.title}</Text>\r\n              <Text style={styles.eventDescription}>{item.description}</Text>\r\n              <Text style={styles.eventDate}>{formatDate(item.date)}</Text>\r\n              <Text style={styles.eventLocation}>Location: {item.location}</Text>\r\n            </View>\r\n          )}\r\n          ListEmptyComponent={\r\n            <Text style={styles.noEventsText}>No events available at the moment.</Text>\r\n          }\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5F5F5',\r\n    padding: 20,\r\n  },\r\n  eventCard: {\r\n    backgroundColor: '#fff',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  eventTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  eventDescription: {\r\n    fontSize: 14,\r\n    color: '#333',\r\n    marginBottom: 5,\r\n  },\r\n  eventDate: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    color: '#FF6347',\r\n    marginBottom: 5,\r\n  },\r\n  eventLocation: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  noEventsText: {\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    color: '#888',\r\n    marginTop: 20,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\poske\\\\OneDrive\\\\Desktop\\\\LocalHive\\\\src\\\\screens\\\\AlertsScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CONFIG from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlertsScreen() {\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    BASE_URL\n  } = CONFIG;\n  const fetchAlerts = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${BASE_URL}/alerts`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setAlerts(data);\n    } catch (error) {\n      console.error('Error fetching alerts:', error.message || error);\n      Alert.alert('Error', 'Unable to fetch alerts. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAlerts();\n  }, []);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: loading ? _jsxDEV(ActivityIndicator, {\n      size: \"large\",\n      color: \"#32CD32\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : _jsxDEV(FlatList, {\n      data: alerts,\n      keyExtractor: item => item.id.toString(),\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: styles.alertCard,\n        children: [_jsxDEV(Text, {\n          style: styles.alertTitle,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), _jsxDEV(Text, {\n          style: styles.alertDescription,\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this),\n      ListEmptyComponent: !loading && _jsxDEV(Text, {\n        style: styles.emptyText,\n        children: \"No alerts updates found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n    padding: 20\n  },\n  alertCard: {\n    backgroundColor: '#fff',\n    padding: 15,\n    borderRadius: 10,\n    marginBottom: 15,\n    borderWidth: 1,\n    borderColor: '#ddd'\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#aaa',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  alertTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  alertDescription: {\n    fontSize: 14,\n    color: '#333'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","StyleSheet","ActivityIndicator","Alert","CONFIG","jsxDEV","_jsxDEV","AlertsScreen","alerts","setAlerts","loading","setLoading","BASE_URL","fetchAlerts","response","fetch","ok","Error","status","data","json","error","console","message","alert","style","styles","container","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","item","id","toString","renderItem","alertCard","alertTitle","title","alertDescription","description","ListEmptyComponent","emptyText","create","flex","backgroundColor","padding","borderRadius","marginBottom","borderWidth","borderColor","fontSize","textAlign","marginTop","fontWeight"],"sources":["C:/Users/poske/OneDrive/Desktop/LocalHive/src/screens/AlertsScreen.js"],"sourcesContent":["// src/screens/AlertsScreen.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, StyleSheet, ActivityIndicator, Alert } from 'react-native';\r\nimport CONFIG from './config';\r\n\r\nexport default function AlertsScreen() {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { BASE_URL } = CONFIG;\r\n\r\n  const fetchAlerts = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/alerts`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setAlerts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching alerts:', error.message || error);\r\n      Alert.alert('Error', 'Unable to fetch alerts. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAlerts();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#32CD32\" />\r\n      ) : (\r\n        <FlatList\r\n          data={alerts}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.alertCard}>\r\n              <Text style={styles.alertTitle}>{item.title}</Text>\r\n              <Text style={styles.alertDescription}>{item.description}</Text>\r\n            </View>\r\n          )}\r\n          ListEmptyComponent={\r\n            !loading && <Text style={styles.emptyText}>No alerts updates found.</Text>\r\n          }\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#F5F5F5', padding: 20 },\r\n  alertCard: {\r\n    backgroundColor: '#fff',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 15,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#aaa',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n  alertTitle: { fontSize: 16, fontWeight: 'bold', marginBottom: 5 },\r\n  alertDescription: { fontSize: 14, color: '#333' },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
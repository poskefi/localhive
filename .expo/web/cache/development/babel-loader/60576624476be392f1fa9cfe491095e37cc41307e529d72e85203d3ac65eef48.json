{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nimport { deepFreeze } from \"./deepFreeze.js\";\nconst createStore = getInitialState => {\n  const listeners = [];\n  let initialized = false;\n  let state;\n  const getState = () => {\n    if (initialized) {\n      return state;\n    }\n    initialized = true;\n    state = deepFreeze(getInitialState());\n    return state;\n  };\n  const setState = newState => {\n    state = deepFreeze(newState);\n    listeners.forEach(listener => listener());\n  };\n  const subscribe = callback => {\n    listeners.push(callback);\n    return () => {\n      const index = listeners.indexOf(callback);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n  return {\n    getState,\n    setState,\n    subscribe\n  };\n};\nexport function useSyncState(getInitialState) {\n  const store = React.useRef(createStore(getInitialState)).current;\n  const state = React.useSyncExternalStore(store.subscribe, store.getState, store.getState);\n  React.useDebugValue(state);\n  return [state, store.getState, store.setState];\n}","map":{"version":3,"names":["React","deepFreeze","createStore","getInitialState","listeners","initialized","state","getState","setState","newState","forEach","listener","subscribe","callback","push","index","indexOf","splice","useSyncState","store","useRef","current","useSyncExternalStore","useDebugValue"],"sources":["C:\\Users\\poske\\OneDrive\\Desktop\\LocalHive\\node_modules\\@react-navigation\\core\\src\\useSyncState.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { deepFreeze } from './deepFreeze';\n\nconst createStore = <T,>(getInitialState: () => T) => {\n  const listeners: (() => void)[] = [];\n\n  let initialized = false;\n  let state: T;\n\n  const getState = () => {\n    if (initialized) {\n      return state;\n    }\n\n    initialized = true;\n    state = deepFreeze(getInitialState());\n\n    return state;\n  };\n\n  const setState = (newState: T) => {\n    state = deepFreeze(newState);\n\n    listeners.forEach((listener) => listener());\n  };\n\n  const subscribe = (callback: () => void) => {\n    listeners.push(callback);\n\n    return () => {\n      const index = listeners.indexOf(callback);\n\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n\n  return {\n    getState,\n    setState,\n    subscribe,\n  };\n};\n\nexport function useSyncState<T>(getInitialState: () => T) {\n  const store = React.useRef(createStore(getInitialState)).current;\n\n  const state = React.useSyncExternalStore(\n    store.subscribe,\n    store.getState,\n    store.getState\n  );\n\n  React.useDebugValue(state);\n\n  return [state, store.getState, store.setState] as const;\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAU,QAAQ,iBAAc;AAEzC,MAAMC,WAAW,GAAQC,eAAwB,IAAK;EACpD,MAAMC,SAAyB,GAAG,EAAE;EAEpC,IAAIC,WAAW,GAAG,KAAK;EACvB,IAAIC,KAAQ;EAEZ,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIF,WAAW,EAAE;MACf,OAAOC,KAAK;IACd;IAEAD,WAAW,GAAG,IAAI;IAClBC,KAAK,GAAGL,UAAU,CAACE,eAAe,CAAC,CAAC,CAAC;IAErC,OAAOG,KAAK;EACd,CAAC;EAED,MAAME,QAAQ,GAAIC,QAAW,IAAK;IAChCH,KAAK,GAAGL,UAAU,CAACQ,QAAQ,CAAC;IAE5BL,SAAS,CAACM,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,SAAS,GAAIC,QAAoB,IAAK;IAC1CT,SAAS,CAACU,IAAI,CAACD,QAAQ,CAAC;IAExB,OAAO,MAAM;MACX,MAAME,KAAK,GAAGX,SAAS,CAACY,OAAO,CAACH,QAAQ,CAAC;MAEzC,IAAIE,KAAK,GAAG,CAAC,CAAC,EAAE;QACdX,SAAS,CAACa,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC;EAED,OAAO;IACLR,QAAQ;IACRC,QAAQ;IACRI;EACF,CAAC;AACH,CAAC;AAED,OAAO,SAASM,YAAYA,CAAIf,eAAwB,EAAE;EACxD,MAAMgB,KAAK,GAAGnB,KAAK,CAACoB,MAAM,CAAClB,WAAW,CAACC,eAAe,CAAC,CAAC,CAACkB,OAAO;EAEhE,MAAMf,KAAK,GAAGN,KAAK,CAACsB,oBAAoB,CACtCH,KAAK,CAACP,SAAS,EACfO,KAAK,CAACZ,QAAQ,EACdY,KAAK,CAACZ,QACR,CAAC;EAEDP,KAAK,CAACuB,aAAa,CAACjB,KAAK,CAAC;EAE1B,OAAO,CAACA,KAAK,EAAEa,KAAK,CAACZ,QAAQ,EAAEY,KAAK,CAACX,QAAQ,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}